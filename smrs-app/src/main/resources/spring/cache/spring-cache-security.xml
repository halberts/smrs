<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:lang="http://www.springframework.org/schema/lang" xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="
     http://www.springframework.org/schema/beans 
     http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
     http://www.springframework.org/schema/tx
     http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
     http://www.springframework.org/schema/aop 
     http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
     http://www.springframework.org/schema/jee 
     http://www.springframework.org/schema/jee/spring-jee-3.1.xsd
     http://www.springframework.org/schema/context
     http://www.springframework.org/schema/context/spring-context-3.1.xsd
     http://www.springframework.org/schema/lang
     http://www.springframework.org/schema/lang/spring-lang-3.1.xsd
     http://www.springframework.org/schema/cache
     http://www.springframework.org/schema/cache/spring-cache-3.1.xsd">
     <!-- 用户缓存配置 -->
	<aop:config>
	   <aop:advisor advice-ref="userAdvice" pointcut="execution(* com.smrs.security.service.impl.UserServiceImpl.*(..))" order="15"/>
	</aop:config>
	<cache:advice id="userAdvice" cache-manager="ehcacheManager">
	   <cache:caching cache="user">
	      <cache:cacheable method="getUserById" key="'${server.name}:user:'+#id"/>
	      <cache:cache-evict method="deleteUser" key="'${server.name}:user:'+#userId"/>
	      <cache:cache-evict method="updateUser" key="'${server.name}:user:'+#user.id"/>
	      <cache:cache-evict method="updatePassword" key="'${server.name}:user:'+#userId"/>
	   </cache:caching>
	</cache:advice>
	
	<!-- 角色信息缓存 -->
	<aop:config>
	   <aop:advisor advice-ref="roleAdvice" pointcut="execution(* com.smrs.security.service.impl.RoleServiceImpl.*(..))" order="15"/>
	</aop:config>
	<cache:advice id="roleAdvice" cache-manager="ehcacheManager">
	   <cache:caching cache="role">
	      <cache:cacheable method="getRoleById" key="'${server.name}:role:'+#roleId"/>
	      <cache:cacheable method="getRoles" key="'${server.name}:role:allRoles'"/>
	      <cache:cache-evict method="deleteRole" key="'${server.name}:role:allRoles'"/>
	      <cache:cache-evict method="deleteRole" key="'${server.name}:role:'+#roleId"/>
	      <cache:cache-evict method="updateRole" key="'${server.name}:role:allRoles'"/>
	      <cache:cache-evict method="updateRole" key="'${server.name}:role:'+#role.id"/>
	      <cache:cache-evict method="createRole" key="'${server.name}:role:allRoles'"/>
	   </cache:caching>
	</cache:advice>
	
	<!-- 资源信息缓存 -->
	<aop:config>
	   <aop:advisor advice-ref="resourceAdvice" pointcut="execution(* com.smrs.security.service.impl.ResourceServiceImpl.*(..))" order="15"/>
	</aop:config>
	<cache:advice id="resourceAdvice" cache-manager="ehcacheManager">
	   <cache:caching cache="resource">
	      <cache:cacheable method="getResourceById" key="'${server.name}:resource:'+#resourceId"/>
	      <cache:cacheable method="getAll" key="'${server.name}:resource:getAll'"/>
	      <cache:cacheable method="getUserResourceDescendants" key="'${server.name}:resource:getUserResourceDescendants:'+#userId+':'+#codeList.hashCode()"/>
	      <cache:cacheable method="getUserDisplayedURLResources" key="'${server.name}:resource:'+#userId+':'+#moduleName"/>
	      <cache:cache-evict method="deleteResource" key="'${server.name}:resource:'+#resourceId"/>
	      <cache:cache-evict method="deleteResource" key="'${server.name}:resource:getAll'"/>
	      <cache:cache-evict method="updateResource" key="'${server.name}:resource:getAll'"/>
	      <cache:cache-evict method="updateResource" key="'${server.name}:resource:'+#resource.id"/>
	      <cache:cache-evict method="createResource" key="'${server.name}:resource:getAll'"/>
	   </cache:caching>
	</cache:advice>
</beans>